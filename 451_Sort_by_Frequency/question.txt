451. Sort Characters by fequency 
    Given a string, sort it in decreasing order based on the frequency of characters.

    Example 1:

    Input:
    "tree"

    Output:
    "eert"

    Explanation:
    'e' appears twice while 'r' and 't' both appear once.
    So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.
    Example 2:

    Input:
    "cccaaa"

    Output:
    "cccaaa"

    Explanation:
    Both 'c' and 'a' appear three times, so "aaaccc" is also a valid answer.
    Note that "cacaca" is incorrect, as the same characters must be together.
    Example 3:

    Input:
    "Aabb"

    Output:
    "bbAa"

    Explanation:
    "bbaA" is also a valid answer, but "Aabb" is incorrect.

    Note that 'A' and 'a' are treated as two different characters.

/**************************************************************************
 * Thinking
 *************************************************************************/
 Treat the array as char array and sort it. Then utilize 'groupby' utility in python to get each character group. 
 Ex. baby 
     1). sort:  sort(baby) => abby
     2). Use 'groupby': groupby(abby) => a, bb, y
     3). Sort the groups by its string length. sort(groups) => bb, a, y or bb, y, a
     4). Join sorted groups. => bbay or bbya


