496. Next Greater Element I
    You are given two arrays (without duplicates) nums1 and nums2 where nums1â€™s elements are subset of nums2. Find all the next greater numbers for nums1's elements in the corresponding places of nums2.

    The Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. If it does not exist, output -1 for this number.

    Example 1:
    Input: nums1 = [4,1,2], nums2 = [1,3,4,2].
    Output: [-1,3,-1]
    Explanation:
        For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.
        For number 1 in the first array, the next greater number for it in the second array is 3.
        For number 2 in the first array, there is no next greater number for it in the second array, so output -1.
    Example 2:
    Input: nums1 = [2,4], nums2 = [1,2,3,4].
    Output: [3,-1]
    Explanation:
        For number 2 in the first array, the next greater number for it in the second array is 3.
        For number 4 in the first array, there is no next greater number for it in the second array, so output -1.
    Note:
    All elements in nums1 and nums2 are unique.
    The length of both nums1 and nums2 would not exceed 1000.

/****************************************************************************************************
 * Thinking
 ***************************************************************************************************/
    Go through an actual example usually helps to find pattern of the solution.
    Ex.  [ 9, 8, [ 5, 3, 2], 7, 6, 1], 10, 11
    For the above example, (5,3,2)'s next greater element is 7; (9, 8, 7, 6, 1) => 10; 10 => 11; 11 => -1

     We can easily see that if some subsequence is in descending order, and when they reach a descending order broker. Use above as an example, (9, 8, 5, 3, 2) is a descending subsequence, the following 7 is the descending order broker. Thus, 7 is the next greater number for all previous number in the descending subsequence which are smaller than 7, (5, 3, 2 in this case). 
    
    We use stack to always keep a descending subsequence in the stack. We compare the current number with the top number in stack. If it is smaller than the top element, push the current number in stack. If the current number is larger than the top element, pop out the top element and its next greater number is the current number. NextGreater[pop] = current. And repeat the comparison step until the current number is no longer larger than top or reach the end of stack.

    Optimization:
    Since num1 array is a subset of num2 array. And we only care about the next greater element for num1 array. Thus, we only need to push the number into stack if the number exist is num1 array. 











